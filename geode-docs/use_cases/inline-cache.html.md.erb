---
title: The Inline Cache
---
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

An inline cache holds region entries for a client application.

## Description of an Inline Cache

An inline cache holds data for quick access.
The inline cache comprises 
a <%=vars.product_name%> region together with code deployed
to servers that host the region.
The inline cache sits between the client application and a
backing data store.
The server-deployed code communicates with the backend data store.

<img src="../images/inline-cache.png" id="inline-cache-png" class="image" />

The client application's cache lookup is a region get
operation, and a cache write is a region put operation. 

When the cache (region) has the requested region entry,
it quickly responds with the value for a lookup operation.
This is a cache hit.
If the requested region entry is not in the region,
it is a cache miss,
and the code deployed to the server acquires the
entry from the data store.
<%=vars.product_name%> writes the acquired region entry to the region
such that future lookups will cause a cache hit.

## Implementation and Configuration

Implement the `CacheLoader` interface to handle cache read misses.
A get operation that causes a miss invokes 
the `CacheLoader.load` method.
This method is expected to return the value associated with the
cache miss.
Therefore, the implementation must acquire the value.
Upon return from the `CacheLoader.load` method,
the `get` operation places the key/value into the region
before it completes by returning the value.
See details about cache loaders at
[Implement a Data Loader](../developing/outside_data_sources/implementing_data_loaders.html).

